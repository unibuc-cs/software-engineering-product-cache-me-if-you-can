@model Developer_Toolbox.Models.Badge



<div class="container py-5">
    @if (TempData.ContainsKey("message"))
    {
        <h4 class="@ViewBag.MessageType p-3 rounded-3 text-center mb-5">@ViewBag.Message</h4>
    }
    <h2 class="text-center">Edit badge</h2>

    <div class="row">
        <div class="col-6 offset-3">
            <form class="d-flex flex-column gap-3 overflow-auto" method="post" enctype="multipart/form-data" action="/Badges/Edit/@Model.Id">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div>
                    @Html.Label("Title", "Badge title")

                    @Html.TextBox("Title", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                </div>
                <div>
                    @Html.Label("Description", "Badge description")

                    @Html.TextArea("Description", null, new { @class = "form-control"})
                    @Html.ValidationMessage("Description", null, new { @class = "text-danger" })
                </div>
                <div>
                    <label for="file">Upload Image</label>
                    <input type="file" id="file" name="file" style="margin:1em" />
                    @Html.ValidationMessage("Image", null, new { @class = "text-danger" })
                </div>
                <div>
                    <label>Select activity</label>
                    @Html.DropDownListFor(m => m.TargetActivityId,
                    new SelectList(Model.TargetActivities, "Value", "Text"),
                    "Selected activity", new { @id = "targetActivity", @class = "form-control", @disabled = "disabled", @required = "false"})
                </div>

                @if (Model.TargetActivityId == 5)
                {
                    <div>
                        <label>Select targeted weekly challenges (optional)</label>
                        @Html.ListBoxFor(m => m.SelectedChallengesIds,
                    new SelectList(ViewBag.SelectedChallenges, "Value", "Text"),
                    new { @class = "form-control", @disabled = "disabled" })
                    </div>
                }
                else
                {
                    <div>
                        @Html.Label("TargetNoOfTimes", "Number of times the activity must be completed")

                        @Html.Editor("TargetNoOfTimes", null, new { htmlAttributes = new { @class="form-control", @disabled= "disabled", @required = "false" }})
                    </div>

                    if (Model.TargetActivity.isPracticeRelated != null)
                    {
                        if ((bool)Model.TargetActivity.isPracticeRelated)
                        {
                            <div>
                                <label>Select targeted category</label>
                                @Html.DropDownListFor(m => m.TargetCategoryId,
                                new SelectList(Model.TargetCategories, "Value", "Text"),
                                "Selected category", new { @class = "form-control", @disabled = "disabled" })
                            </div>

                            <div>
                                @Html.Label("Targeted level of difficulty")
                                @Html.DropDownListFor(
                                (badge => badge.TargetLevel),
                                (IEnumerable<SelectListItem>)ViewBag.LevelOfDifficulty,
                                "Select",
                                new { @class = "form-control", @disabled = "disabled" }
                                )
                            </div>
                        }
                        else
                        {
                            <div>
                                <label>Selected targeted tags</label>
                                @Html.ListBoxFor(m => m.SelectedTagsIds,
                                new SelectList(ViewBag.SelectedTags, "Value", "Text"),
                                new { @class = "form-control", @disabled = "disabled" })
                            </div>
                        }
                    }
                }

                <button class="btn btn-outline" style="background-color:#eee; color:black;" type="submit">Save changes</button>
            </form>
        </div>
    </div>
</div>